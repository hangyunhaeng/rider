<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dtyDAO">
	<insert id="insertDeliveryInfo" parameterType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO">

			INSERT INTO RD_DELIVERY_INFO
			(COOPERATOR_ID, COOPERATOR_NM,REGISTRATION_SN,REGISTRATION_NM,RUN_DE,DELIVERY_SN,DELIVERY_STATE,
			SERVICE_TYPE,DELIVERY_TYPE,RIDER_ID,MBER_ID,RIDER_NM,DELIVERY_METHOD,SHOP_SN,SHOP_NM,GOODS_PRICE,
			PICKUP_ADDR,DESTINATION_ADDR,ORDER_DT,OPERATE_RIDER_DT,SHOP_COMEIN_DT,PICKUP_FINIST_DT,DELIVERY_FINIST_DT,
			DISTANCE,ADD_DELIVERY_REASON,ADD_DELIVERY_DESC,PICKUP_LAW_DONG,BASIC_PRICE,WEATHER_PRIMAGE,ADD_PRIMAGE,
			PEAK_PRIMAGE_ETC,DELIVERY_PRICE,RIDER_CAUSE_YN,ADD_PRIMAGE_DESC,NOTE,ATCH_FILE_ID,CREAT_DT,CREAT_ID)
			SELECT
			#{cooperatorId},#{cooperatorNm},#{registrationSn},#{registrationNm},#{runDe},#{deliverySn},#{deliveryState},
			#{serviceType},#{deliveryType},#{riderId},#{mberId},#{riderNm},#{deliveryMethod},#{shopSn},#{shopNm},#{goodsPrice},
			#{pickupAddr},#{destinationAddr},#{orderDt},#{operateRiderDt},#{shopComeinDt},#{pickupFinistDt},#{deliveryFinistDt},
			#{distance},#{addDeliveryReason},#{addDeliveryDesc},#{pickupLawDong},#{basicPrice},#{weatherPrimage},#{addPrimage},
			#{peakPrimageEtc},#{deliveryPrice},#{riderCauseYn},#{addPrimageDesc},#{note},#{atchFileId},SYSDATE(),#{creatId}

			FROM 	RD_COOPERATOR a
			JOIN RD_COOPERATOR_FEE b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND b.use_at ='Y'
			WHERE 1=1
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 */
			AND a.REGISTRATION_SN = #{schIhidNum} AND a.use_at ='Y'
			</if>
			AND a.COOPERATOR_ID = #{cooperatorId}
			LIMIT 1

	</insert>
	<select id="selectDeliveryInfoByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO" resultType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO">
		SELECT
			COOPERATOR_ID, COOPERATOR_NM,REGISTRATION_SN,REGISTRATION_NM,RUN_DE,DELIVERY_SN,DELIVERY_STATE,
			SERVICE_TYPE,DELIVERY_TYPE,RIDER_ID,a.MBER_ID,RIDER_NM,DELIVERY_METHOD,SHOP_SN,SHOP_NM,GOODS_PRICE,
			PICKUP_ADDR,DESTINATION_ADDR,ORDER_DT,OPERATE_RIDER_DT,SHOP_COMEIN_DT,PICKUP_FINIST_DT,DELIVERY_FINIST_DT,
			DISTANCE,ADD_DELIVERY_REASON,ADD_DELIVERY_DESC,PICKUP_LAW_DONG,BASIC_PRICE,WEATHER_PRIMAGE,ADD_PRIMAGE,
			PEAK_PRIMAGE_ETC,DELIVERY_PRICE,RIDER_CAUSE_YN,ADD_PRIMAGE_DESC,NOTE,ATCH_FILE_ID,CREAT_DT,CREAT_ID
		FROM RD_DELIVERY_INFO a
		LEFT JOIN COMTNGNRLMBER b ON a.mber_id = b.mber_id
		WHERE 1=1
			<if test="searchGubun == 'FILE'">
				AND ATCH_FILE_ID = #{searchId}
			</if>
			<if test="searchMberId != null and searchMberId != ''">
				AND a.MBER_ID = #{searchMberId}
			</if>
			<if test="searchRunDeDate != null and searchRunDeDate != ''">
				AND a.RUN_DE like '%' #{searchRunDeDate} '%'
			</if>

			<if test="searchGubun == 'DAY'">
				<if test='searchCooperatorId != null and searchCooperatorId != "all"'>
				AND COOPERATOR_ID = #{searchCooperatorId}
				</if>
				<if test="searchNm != null and searchNm != ''">
				AND MBER_NM like '%' #{searchNm} '%'
				</if>
				AND RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}
				<if test="searchRegistrationSn != null and searchRegistrationSn != ''">
				AND COOPERATOR_ID IN (
					SELECT COOPERATOR_ID from RD_COOPERATOR
					WHERE REGISTRATION_SN = #{searchRegistrationSn}
				)
				</if>
				<if test="searchFixGubun == 'YES'">
				AND a.FIX_DAY is not null
				</if>
				<if test="searchFixGubun == 'NO'">
				AND a.FIX_DAY is null
				</if>

			</if>
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
	</select>


	<select id="selectDeliveryInfoByParam" parameterType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO" resultType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO">
		SELECT
			COOPERATOR_ID, COOPERATOR_NM,REGISTRATION_SN,REGISTRATION_NM,RUN_DE,DELIVERY_SN,DELIVERY_STATE,
			SERVICE_TYPE,DELIVERY_TYPE,RIDER_ID,a.MBER_ID,RIDER_NM,DELIVERY_METHOD,SHOP_SN,SHOP_NM,GOODS_PRICE,
			PICKUP_ADDR,DESTINATION_ADDR,ORDER_DT,OPERATE_RIDER_DT,SHOP_COMEIN_DT,PICKUP_FINIST_DT,DELIVERY_FINIST_DT,
			DISTANCE,ADD_DELIVERY_REASON,ADD_DELIVERY_DESC,PICKUP_LAW_DONG,BASIC_PRICE,WEATHER_PRIMAGE,ADD_PRIMAGE,
			PEAK_PRIMAGE_ETC,DELIVERY_PRICE,RIDER_CAUSE_YN,ADD_PRIMAGE_DESC,NOTE,a.ATCH_FILE_ID,a.CREAT_DT,a.CREAT_ID
		FROM RD_DELIVERY_INFO a
		LEFT JOIN COMTNGNRLMBER b ON a.mber_id = b.mber_id
		LEFT JOIN COMTNFILE c ON a.ATCH_FILE_ID = c.ATCH_FILE_ID
		WHERE 1=1
			AND RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}
			AND c.USE_AT ='Y'

			<if test="searchMberId != null and searchMberId != ''">
				AND a.MBER_ID = #{searchMberId}
			</if>
			<if test="searchRunDeDate != null and searchRunDeDate != ''">
				AND a.RUN_DE like '%' #{searchRunDeDate} '%'
			</if>

			<if test='searchCooperatorId != null and searchCooperatorId != "all"'>
				AND COOPERATOR_ID = #{searchCooperatorId}
			</if>
			<if test="searchNm != null and searchNm != ''">
				AND MBER_NM like '%' #{searchNm} '%'
			</if>
			<if test="searchRegistrationSn != null and searchRegistrationSn != ''">
				AND COOPERATOR_ID IN (
					SELECT COOPERATOR_ID from RD_COOPERATOR
					WHERE REGISTRATION_SN = #{searchRegistrationSn}
				)
			</if>
			<if test="searchDeliveryState != null and searchDeliveryState != ''">
				AND DELIVERY_STATE = #{searchDeliveryState}
			</if>
			<if test="searchFixGubun == 'YES'">
				AND a.FIX_DAY is not null
			</if>
			<if test="searchFixGubun == 'NO'">
				AND a.FIX_DAY is null
			</if>

			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
	</select>
	<update id="updateFixDay" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO">
		UPDATE RD_DELIVERY_INFO
		SET FIX_DAY = DATE_FORMAT(SYSDATE(), '%Y%m%d')
		WHERE (COOPERATOR_ID,RUN_DE, DELIVERY_SN) IN (
			SELECT
				a.COOPERATOR_ID,a.RUN_DE, a.DELIVERY_SN
			FROM RD_DELIVERY_INFO a
			LEFT JOIN COMTNGNRLMBER b ON a.mber_id = b.mber_id
			JOIN COMTNFILE c ON a.ATCH_FILE_ID = c.ATCH_FILE_ID
			WHERE 1=1

				AND c.USE_AT = 'Y'
				AND RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}
				<if test="searchNm != null and searchNm != ''">
				AND MBER_NM like '%' #{searchNm} '%'
				</if>
				AND a.FIX_DAY is null
				<if test="schAuthorCode == 'ROLE_USER'">
				/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
				AND COOPERATOR_ID IN (
					SELECT COOPERATOR_ID FROM RD_COOPERATOR a
					WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
				)
				</if>
		)
	</update>
	<update id="updateFixWeek" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_WEEK_RIDER_INFO a,(

				SELECT wi.week_id, wr.mber_id
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE e ON wi.ATCH_FILE_ID = e.ATCH_FILE_ID
						WHERE 1=1
							AND e.USE_AT ='Y'
							AND wr.FIX_DAY is NULL
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM like '%' #{searchNm} '%' -->
<!-- 							</if> -->
		) b
		SET FIX_DAY = DATE_FORMAT(SYSDATE(), '%Y%m%d')
		where a.week_id = b.week_id
			and a.mber_id = b.mber_id
	</update>

	<update id="updateFixWeekInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_WEEK_INFO a, (
			SELECT wi.WEEK_ID, SUM(if(wr.FIX_DAY IS NULL , 1, 0)) AS NOT_CNT
			FROM RD_WEEK_INFO wi
			LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
			JOIN COMTNFILE a ON wi.ATCH_FILE_ID = a.ATCH_FILE_ID
			WHERE 1=1
				AND wi.FIX_DAY is NULL
				AND a.USE_AT ='Y'
				AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 				AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
			GROUP BY wi.WEEK_ID
		)b
		SET a.FIX_DAY = DATE_FORMAT(SYSDATE(), '%Y%m%d')
		WHERE a.WEEK_ID = b.WEEK_ID
		AND b.NOT_CNT = 0
	</update>

	<insert id="insertDeliveryError" parameterType="egovframework.com.rd.usr.service.vo.DeliveryErrorVO">
		INSERT INTO RD_DELIVERY_ERROR
		(LONGTXT, ATCH_FILE_ID, CREAT_DT, CREAT_ID, USE_AT)
		VALUES
		(#{longtxt},#{atchFileId},SYSDATE(),#{creatId}, #{useAt})
	</insert>

	<select id="selectDeliveryErrorByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.DeliveryErrorVO" resultType="egovframework.com.rd.usr.service.vo.DeliveryErrorVO">
		SELECT LONGTXT, ATCH_FILE_ID, CREAT_DT, CREAT_ID, USE_AT
		FROM RD_DELIVERY_ERROR
		WHERE ATCH_FILE_ID = #{searchId}
			AND USE_AT = 'Y'

	</select>

	<insert id="insertWeekInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
			INSERT INTO RD_WEEK_INFO
			(WEEK_ID,COOPERATOR_ID,ACCOUNTS_ST_DT,ACCOUNTS_ED_DT ,DELIVERY_COST ,ADD_ACCOUNTS ,OPERATING_COST,MANAGEMENT_COST
			,OPERATING_FEE,ETC_COST,TIME_INSURANCE,OWNER_EMPLOYMENT_INSURANCE,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE
			,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM,EMPLOYMENT_INSURANCE_ACCOUNTS,INDUSTRIAL_INSURANCE_ACCOUNTS
			,G,ACCOUNTS_SCHEDULE_COST,TAX_BILL_SUPPLY,TAX_BILL_ADD ,TAX_BILL_SUM ,NOTE,ATCH_FILE_ID,CREAT_DT,CREAT_ID)
			VALUES
			(#{weekId},#{cooperatorId},#{accountsStDt},#{accountsEdDt},#{deliveryCost},#{addAccounts},#{operatingCost},#{managementCost}
			,#{operatingFee},#{etcCost},#{timeInsurance},#{ownerEmploymentInsurance},#{riderEmploymentInsurance},#{ownerIndustrialInsurance}
			,#{riderIndustrialInsurance},#{withholdingTaxInsuranceSum},#{employmentInsuranceAccounts},#{industrialInsuranceAccounts}
			,#{g},#{accountsScheduleCost},#{taxBillSupply},#{taxBillAdd},#{taxBillSum},#{note},#{atchFileId},SYSDATE(),#{creatId})
	</insert>

	<insert id="insertWeekRiderInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekRiderInfoVO">
			INSERT INTO RD_WEEK_RIDER_INFO
			(WEEK_ID,NO,MBER_ID,MBER_NM,CNT,DELIVERY_COST,ADD_COST,SUM_COST,TIME_INSURANCE,NECESSARY_EXPENSES,PAY,OWNER_EMPLOYMENT_INSURANCE
			,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM
			,OWNER_EMPLOYMENT_INSURANCE_ACCOUNTS,RIDER_EMPLOYMENT_INSURANCE_ACCOUNTS,SUM_EMPLOYMENT_INSURANCE_ACCOUNTS
			,OWNER_INDUSTRIAL_INSURANCE_ACCOUNTS,RIDER_INDUSTRIAL_INSURANCE_ACCOUNTS,SUM_INDUSTRIAL_INSURANCE_ACCOUNTS
			,OPERATING_COST,ACCOUNTS_COST,INCOME_TAX,RESIDENCE_TAX,WITHHOLDING_TAX,GIVE_PAY,CREAT_DT,CREAT_ID)
			VALUES
			(#{weekId},#{no},#{mberId},#{mberNm},#{cnt},#{deliveryCost},#{addCost},#{sumCost},#{timeInsurance},#{necessaryExpenses},#{pay},#{ownerEmploymentInsurance}
			,#{riderEmploymentInsurance},#{ownerIndustrialInsurance},#{riderIndustrialInsurance},#{withholdingTaxInsuranceSum}
			,#{ownerEmploymentInsuranceAccounts},#{riderEmploymentInsuranceAccounts},#{sumEmploymentInsuranceAccounts}
			,#{ownerIndustrialInsuranceAccounts},#{riderIndustrialInsuranceAccounts},#{sumIndustrialInsuranceAccounts}
			,#{operatingCost},#{accountsCost},#{incomeTax},#{residenceTax},#{withholdingTax},#{givePay},SYSDATE(),#{creatId})
	</insert>

	<insert id="insertWeekInfoOut" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
			INSERT INTO RD_WEEK_INFO_OUT
			(WEEK_ID,COOPERATOR_ID,ACCOUNTS_ST_DT,ACCOUNTS_ED_DT ,DELIVERY_COST ,ADD_ACCOUNTS ,OPERATING_COST,MANAGEMENT_COST
			,OPERATING_FEE,ETC_COST,TIME_INSURANCE,OWNER_EMPLOYMENT_INSURANCE,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE
			,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM,EMPLOYMENT_INSURANCE_ACCOUNTS,INDUSTRIAL_INSURANCE_ACCOUNTS
			,G,ACCOUNTS_SCHEDULE_COST,TAX_BILL_SUPPLY,TAX_BILL_ADD ,TAX_BILL_SUM ,NOTE,ATCH_FILE_ID,OPERATING_COST_ADD,CREAT_DT,CREAT_ID)
			VALUES
			(#{weekId},#{cooperatorId},#{accountsStDt},#{accountsEdDt},#{deliveryCost},#{addAccounts},#{operatingCost},#{managementCost}
			,#{operatingFee},#{etcCost},#{timeInsurance},#{ownerEmploymentInsurance},#{riderEmploymentInsurance},#{ownerIndustrialInsurance}
			,#{riderIndustrialInsurance},#{withholdingTaxInsuranceSum},#{employmentInsuranceAccounts},#{industrialInsuranceAccounts}
			,#{g},#{accountsScheduleCost},#{taxBillSupply},#{taxBillAdd},#{taxBillSum},#{note},#{atchFileId},#{operatingCostAdd},SYSDATE(),#{creatId})
	</insert>

	<insert id="insertWeekRiderInfoOut" parameterType="egovframework.com.rd.usr.service.vo.WeekRiderInfoVO">
			INSERT INTO RD_WEEK_RIDER_INFO_OUT
			(WEEK_ID,NO,MBER_ID,MBER_NM,CNT,DELIVERY_COST,ADD_COST,SUM_COST,TIME_INSURANCE,NECESSARY_EXPENSES,PAY,OWNER_EMPLOYMENT_INSURANCE
			,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM
			,OWNER_EMPLOYMENT_INSURANCE_ACCOUNTS,RIDER_EMPLOYMENT_INSURANCE_ACCOUNTS,SUM_EMPLOYMENT_INSURANCE_ACCOUNTS
			,OWNER_INDUSTRIAL_INSURANCE_ACCOUNTS,RIDER_INDUSTRIAL_INSURANCE_ACCOUNTS,SUM_INDUSTRIAL_INSURANCE_ACCOUNTS
			,OPERATING_COST,ACCOUNTS_COST,INCOME_TAX,RESIDENCE_TAX,WITHHOLDING_TAX,GIVE_PAY,OPERATING_COST_ADD,CREAT_DT,CREAT_ID)
			VALUES
			(#{weekId},#{no},#{mberId},#{mberNm},#{cnt},#{deliveryCost},#{addCost},#{sumCost},#{timeInsurance},#{necessaryExpenses},#{pay},#{ownerEmploymentInsurance}
			,#{riderEmploymentInsurance},#{ownerIndustrialInsurance},#{riderIndustrialInsurance},#{withholdingTaxInsuranceSum}
			,#{ownerEmploymentInsuranceAccounts},#{riderEmploymentInsuranceAccounts},#{sumEmploymentInsuranceAccounts}
			,#{ownerIndustrialInsuranceAccounts},#{riderIndustrialInsuranceAccounts},#{sumIndustrialInsuranceAccounts}
			,#{operatingCost},#{accountsCost},#{incomeTax},#{residenceTax},#{withholdingTax},#{givePay},#{operatingCostAdd},SYSDATE(),#{creatId})
	</insert>


	<select id="selectWeekInfoByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT
			WEEK_ID,COOPERATOR_ID,ACCOUNTS_ST_DT,ACCOUNTS_ED_DT ,DELIVERY_COST ,ADD_ACCOUNTS ,OPERATING_COST,MANAGEMENT_COST
			,OPERATING_FEE,ETC_COST,TIME_INSURANCE,OWNER_EMPLOYMENT_INSURANCE,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE
			,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM,EMPLOYMENT_INSURANCE_ACCOUNTS,INDUSTRIAL_INSURANCE_ACCOUNTS
			,G,ACCOUNTS_SCHEDULE_COST,TAX_BILL_SUPPLY,TAX_BILL_ADD ,TAX_BILL_SUM ,NOTE,ATCH_FILE_ID,CREAT_DT,CREAT_ID
		FROM RD_WEEK_INFO
		WHERE ATCH_FILE_ID = #{searchAtchFileId}
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
	</select>

	<select id="selectWeekRiderInfoByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekRiderInfoVO">
		SELECT
			b.WEEK_ID,b.NO,b.MBER_ID,b.MBER_NM,b.CNT,b.DELIVERY_COST,b.ADD_COST,b.SUM_COST,b.TIME_INSURANCE,b.NECESSARY_EXPENSES,b.PAY,b.OWNER_EMPLOYMENT_INSURANCE
			,b.RIDER_EMPLOYMENT_INSURANCE,b.OWNER_INDUSTRIAL_INSURANCE,b.RIDER_INDUSTRIAL_INSURANCE,b.WITHHOLDING_TAX_INSURANCE_SUM
			,b.OWNER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.RIDER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.SUM_EMPLOYMENT_INSURANCE_ACCOUNTS
			,b.OWNER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.RIDER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.SUM_INDUSTRIAL_INSURANCE_ACCOUNTS
			,b.OPERATING_COST,b.ACCOUNTS_COST,b.INCOME_TAX,b.RESIDENCE_TAX,b.WITHHOLDING_TAX,b.GIVE_PAY,b.CREAT_DT,b.CREAT_ID
		FROM RD_WEEK_INFO a, RD_WEEK_RIDER_INFO b
		WHERE a.week_id = b.week_id
			AND ATCH_FILE_ID = #{searchAtchFileId}
			<if test="searchMberId != null and searchMberId != ''">
			AND b.MBER_ID = #{searchMberId}
			</if>
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
			order by b.WEEK_ID asc, LPAD(b.NO, 4,0) ASC
	</select>


	<select id="selectWeekInfoByParam" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT
			WEEK_ID,COOPERATOR_ID,ACCOUNTS_ST_DT,ACCOUNTS_ED_DT ,DELIVERY_COST ,ADD_ACCOUNTS ,OPERATING_COST,MANAGEMENT_COST
			,OPERATING_FEE,ETC_COST,TIME_INSURANCE,OWNER_EMPLOYMENT_INSURANCE,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE
			,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM,EMPLOYMENT_INSURANCE_ACCOUNTS,INDUSTRIAL_INSURANCE_ACCOUNTS
			,G,ACCOUNTS_SCHEDULE_COST,TAX_BILL_SUPPLY,TAX_BILL_ADD ,TAX_BILL_SUM ,NOTE,a.ATCH_FILE_ID,a.CREAT_DT,a.CREAT_ID
		FROM RD_WEEK_INFO a
		JOIN COMTNFILE b ON a.ATCH_FILE_ID = b.ATCH_FILE_ID
		WHERE 1=1
			AND b.USE_AT ='Y'
			AND a.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 			AND (ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 			<if test="searchFixGubun == 'YES'"> -->
<!-- 			AND FIX_DAY is not null -->
<!-- 			</if> -->
<!-- 			<if test="searchFixGubun == 'NO'"> -->
			AND FIX_DAY is null
<!-- 			</if> -->
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
	</select>

	<select id="selectWeekRiderInfoByParam" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekRiderInfoVO">
		SELECT
			b.WEEK_ID,b.NO,a.cooperator_id,b.MBER_ID,b.MBER_NM,b.CNT,b.DELIVERY_COST,b.ADD_COST,b.SUM_COST,b.TIME_INSURANCE,b.NECESSARY_EXPENSES,b.PAY,b.OWNER_EMPLOYMENT_INSURANCE
			,b.RIDER_EMPLOYMENT_INSURANCE,b.OWNER_INDUSTRIAL_INSURANCE,b.RIDER_INDUSTRIAL_INSURANCE,b.WITHHOLDING_TAX_INSURANCE_SUM
			,b.OWNER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.RIDER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.SUM_EMPLOYMENT_INSURANCE_ACCOUNTS
			,b.OWNER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.RIDER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.SUM_INDUSTRIAL_INSURANCE_ACCOUNTS
			,b.OPERATING_COST,b.ACCOUNTS_COST,b.INCOME_TAX,b.RESIDENCE_TAX,b.WITHHOLDING_TAX,b.GIVE_PAY,b.CREAT_DT,b.CREAT_ID
		FROM RD_WEEK_INFO a
		LEFT JOIN RD_WEEK_RIDER_INFO b on a.week_id = b.week_id
		LEFT JOIN COMTNGNRLMBER c ON b.MBER_ID = c.MBER_ID
		JOIN COMTNFILE d ON a.ATCH_FILE_ID = d.ATCH_FILE_ID
		WHERE 1 = 1
			AND d.USE_AT = 'Y'
			AND a.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 			AND (a.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or a.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 			<if test="searchFixGubun == 'YES'"> -->
<!-- 			AND b.FIX_DAY is not null -->
<!-- 			</if> -->
<!-- 			<if test="searchFixGubun == 'NO'"> -->
			AND b.FIX_DAY is null
<!-- 			</if> -->
<!-- 			<if test="searchNm != null and searchNm != ''"> -->
<!-- 			AND c.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 			</if> -->
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
			order by b.WEEK_ID asc, LPAD(b.NO, 4,0) ASC
	</select>

	<select id="selectUploadStateInWeek" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.UploadStateVO">
		SELECT c.ATCH_FILE_ID, d.ORIGNL_FILE_NM, a.COOPERATOR_ID, b.COOPERATOR_NM, a.WEEK_ID, a.ACCOUNTS_ST_DT, a.ACCOUNTS_ED_DT, DATE_FORMAT(c.CREAT_DT,'%Y%m%d') CREAT_DT
		FROM COMTNFILE c
			LEFT JOIN COMTNFILEDETAIL d ON c.ATCH_FILE_ID = d.ATCH_FILE_ID
			left join RD_WEEK_INFO a ON c.ATCH_FILE_ID = a.ATCH_FILE_ID
			left JOIN RD_COOPERATOR b ON a.COOPERATOR_ID = b.COOPERATOR_ID
		WHERE DATE_FORMAT(c.CREAT_DT, '%Y%m') =  #{searchDate}

			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND a.COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>

			AND c.USE_AT ='Y'
			<if test='searchCooperatorId != null and searchCooperatorId != "all"'>
				AND	a.COOPERATOR_ID = #{searchCooperatorId}
			</if>
				AND file_gubun = 'WEEK'
			ORDER BY c.CREAT_DT desc

	</select>
	<select id="selectUploadStateInDay" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.UploadStateVO">
		SELECT c.ATCH_FILE_ID, d.ORIGNL_FILE_NM, a.COOPERATOR_ID, b.COOPERATOR_NM, COUNT(a.DELIVERY_SN) CNT, DATE_FORMAT(c.CREAT_DT,'%Y%m%d') CREAT_DT, d.ERORR_MSG
		FROM COMTNFILE c
			LEFT JOIN COMTNFILEDETAIL d ON c.ATCH_FILE_ID = d.ATCH_FILE_ID
			LEFT JOIN RD_DELIVERY_INFO a ON c.ATCH_FILE_ID = a.ATCH_FILE_ID
			LEFT JOIN RD_COOPERATOR b ON a.COOPERATOR_ID = b.COOPERATOR_ID
		WHERE DATE_FORMAT(c.CREAT_DT, '%Y%m')  = #{searchDate}
				AND c.USE_AT ='Y'
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND a.COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>

			/*AND b.USE_AT ='Y'*/
			<if test='searchCooperatorId != null and searchCooperatorId != "all"'>
				AND	a.COOPERATOR_ID = #{searchCooperatorId}
			</if>
				AND file_gubun ='DAY'
		GROUP BY a.atch_file_id, b.COOPERATOR_ID, c.ATCH_FILE_ID
		ORDER BY c.CREAT_DT desc
	</select>

	<select id="selectCooperatorList" resultType="egovframework.com.rd.usr.service.vo.SearchKeyVO">
		SELECT COOPERATOR_ID as seleceKey, COOPERATOR_NM as selectValue
		FROM RD_COOPERATOR
		WHERE USE_AT ='Y'
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
			<if test="schAuthorCode == 'ROLE_SALES'">
			/* 영업사원 조건 */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR_SALES
				WHERE EMPLYR_ID = #{searchId} AND USE_AT ='Y'
			)
			</if>

		<if test="schAuthorCode == 'ROLE_ADMIN'">
		UNION
		SELECT a.COOPERATOR_ID as seleceKey, CONCAT('미등록 / ',a.cooperator_id) as selectValue
		FROM RD_WEEK_INFO a LEFT JOIN RD_COOPERATOR b ON a.cooperator_id  =b.cooperator_id
		WHERE (b.cooperator_id IS NULL or IFNULL(b.use_at, 'N') ='N')
		GROUP BY a.cooperator_id

		UNION
		SELECT a.COOPERATOR_ID as seleceKey, CONCAT('미등록 / ',a.cooperator_id) as selectValue
		FROM RD_DELIVERY_INFO a LEFT JOIN RD_COOPERATOR b ON a.cooperator_id  =b.cooperator_id
		WHERE (b.cooperator_id IS NULL or IFNULL(b.use_at, 'N') ='N')
		GROUP BY a.cooperator_id
		</if>
	</select>
	<select id="selectWeekPay" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekPayVO">
		SELECT a.WEEK_ID, a.COOPERATOR_ID, b.MBER_ID, 'WEK' AS DW_GUBUN, '1' AS IO_GUBUN, b.GIVE_PAY
		,b.GIVE_PAY - c.CALL_FEE_COST AS ABLE_PRICE, c.CALL_FEE_COST
		, 0 AS FEE, #{accountsStDt} AS ACCOUNTS_ST_DT, #{accountsEdDt} AS ACCOUNTS_ED_DT, #{atchFileId} AS ATCH_FILE_ID, 'Y' AS USE_AT
		FROM RD_WEEK_INFO a
			LEFT JOIN RD_WEEK_RIDER_INFO b on a.WEEK_ID = b.week_id
			LEFT JOIN (
				SELECT a.COOPERATOR_ID, a.mber_id, SUM(nvl(b.COST, 0)+ nvl(c.COST, 0)) AS CALL_FEE_COST
					FROM RD_DAY_PAY a
					LEFT JOIN RD_PROFIT b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND a.mber_id = b.MBER_ID AND b.gubun ='C' AND a.DYP_ID = b.DYP_ID AND b.use_at ='Y'
					LEFT JOIN RD_COOPERATOR_PROFIT c ON a.COOPERATOR_ID = c.COOPERATOR_ID AND a.mber_id = c.MBER_ID AND c.gubun ='C' AND a.DYP_ID = c.DYP_ID AND c.use_at ='Y'

						WHERE 1=1
						AND a.WEEK_YN = 'N'
						AND a.USE_AT ='Y'
						AND a.IO_GUBUN = '1'
						AND a.COOPERATOR_ID = #{cooperatorId}
						AND a.DAY BETWEEN #{accountsStDt} AND #{accountsEdDt}
				GROUP BY a.COOPERATOR_ID, a.mber_id
			) c ON a.COOPERATOR_ID = c.COOPERATOR_ID AND b.MBER_ID = c.MBER_ID
		WHERE a.ATCH_FILE_ID = #{atchFileId}
	</select>

	<select id="selectPixWeek" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekPayVO">
		SELECT a.WEEK_ID, a.COOPERATOR_ID, b.MBER_ID, 'WEK' AS DW_GUBUN, '1' AS IO_GUBUN, b.GIVE_PAY
		, b.GIVE_PAY - nvl(d.CALL_FEE_COST, 0) - nvl(d.PROGRAM_FEE_COST, 0) AS ABLE_PRICE, d.CALL_FEE_COST, d.PROGRAM_FEE_COST
		, 0 AS FEE, a.ACCOUNTS_ST_DT, a.ACCOUNTS_ED_DT, a.ATCH_FILE_ID, 'Y' AS USE_AT
		FROM RD_WEEK_INFO a
			LEFT JOIN RD_WEEK_RIDER_INFO b on a.WEEK_ID = b.week_id
			LEFT JOIN COMTNGNRLMBER c ON b.mber_id = c.mber_id
			JOIN COMTNFILE d ON a.ATCH_FILE_ID = d.ATCH_FILE_ID
			LEFT JOIN (
				SELECT wi.COOPERATOR_ID, wr.mber_id
				<![CDATA[
				, SUM(nvl(if(wi.accounts_st_dt <= a.DAY AND wi.accounts_ed_dt >= a.DAY, b.COST, 0), 0))
					+ SUM(nvl(if(wi.accounts_st_dt <= a.DAY AND wi.accounts_ed_dt >= a.DAY, c.COST, 0), 0)) CALL_FEE_COST
				, SUM(nvl(if(wi.accounts_st_dt <= a.DAY AND wi.accounts_ed_dt >= a.DAY, e.COST, 0), 0)) PROGRAM_FEE_COST
				]]>
				, a.DAY, wi.accounts_st_dt, wi.accounts_ed_dt
					, d.MBER_NM
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					LEFT JOIN RD_DAY_PAY a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND wr.MBER_ID = a.mber_id AND a.use_at = 'Y' AND IO_GUBUN= '1' AND a.WEEK_YN = 'N'
					LEFT JOIN RD_PROFIT b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND a.mber_id = b.MBER_ID AND b.gubun ='C' AND a.DYP_ID = b.DYP_ID
					LEFT JOIN RD_COOPERATOR_PROFIT c ON a.COOPERATOR_ID = c.COOPERATOR_ID AND a.mber_id = c.MBER_ID AND c.gubun ='C' AND a.DYP_ID = c.DYP_ID
					LEFT JOIN RD_PROFIT e ON a.COOPERATOR_ID = e.COOPERATOR_ID AND a.mber_id = e.MBER_ID AND e.gubun ='P' AND a.DYP_ID = e.DYP_ID
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE f ON wi.ATCH_FILE_ID = f.ATCH_FILE_ID
						WHERE 1=1
							AND wr.FIX_DAY is null
							AND f.USE_AT ='Y'
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 							</if> -->
				GROUP BY wi.COOPERATOR_ID, wr.mber_id
			) d ON a.COOPERATOR_ID = d.COOPERATOR_ID AND b.MBER_ID = d.MBER_ID
		WHERE 1=1
			AND b.FIX_DAY is null
			AND d.USE_AT ='Y'
			AND a.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 			AND (a.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or a.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 			<if test="searchNm != null and searchNm != ''"> -->
<!-- 			AND c.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 			</if> -->
	</select>

	<select id="selectCalBase" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT wi.COOPERATOR_ID, sum(wr.cnt) AS DELIVERY_CNT, a.FEE_COOPERATOR_AT, a.FEE_PROGRAM, a.FEE_ID, wi.ACCOUNTS_ED_DT
		FROM RD_WEEK_INFO wi
		JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
		JOIN RD_COOPERATOR_FEE a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND a.use_at ='Y'
		JOIN COMTNFILE f ON wi.ATCH_FILE_ID = f.ATCH_FILE_ID
			WHERE 1=1
				AND wr.FIX_DAY is null
				AND f.USE_AT ='Y'
				AND wi.ATCH_FILE_ID = #{searchAtchFileId}
	</select>

	<select id="selectForUPdateBalanceWeekByParam" parameterType="egovframework.com.rd.usr.service.vo.BalanceVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
			SELECT a.COOPERATOR_ID, b.MBER_ID

			FROM RD_WEEK_INFO a
				LEFT JOIN RD_WEEK_RIDER_INFO b on a.WEEK_ID = b.week_id
				LEFT JOIN COMTNGNRLMBER c ON b.mber_id = c.mber_id
				JOIN COMTNFILE d ON a.ATCH_FILE_ID = d.ATCH_FILE_ID

			WHERE 1=1
				AND b.FIX_DAY is null
				AND d.USE_AT ='Y'
				AND d.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 				AND (a.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or a.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 				<if test="searchNm != null and searchNm != ''"> -->
<!-- 				AND c.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 				</if> -->
				GROUP BY a.COOPERATOR_ID, b.MBER_ID
		)
		FOR UPDATE
	</select>

	<insert id="insertWeekPay" parameterType="egovframework.com.rd.usr.service.vo.WeekPayVO">
		INSERT INTO RD_WEEK_PAY
		(WKP_ID, COOPERATOR_ID, MBER_ID, DW_GUBUN, IO_GUBUN, ABLE_PRICE, FEE, SEND_PRICE, ACCOUNTS_ST_DT
		, ACCOUNTS_ED_DT, DYP_ID, ATCH_FILE_ID, WEEK_ID, TRAN_DAY, TELEGRAM_NO, ETC_ID, USE_AT, CREAT_DT, CREAT_ID)
		VALUE(#{wkpId}, #{cooperatorId}, #{mberId}, #{dwGubun}, #{ioGubun}, #{ablePrice}, #{fee}, #{sendPrice}
		, #{accountsStDt}, #{accountsEdDt}, #{dypId}, #{atchFileId}, #{weekId}, #{tranDay}, #{telegramNo}, #{etcId},#{useAt}, SYSDATE(), #{creatId})
	</insert>

	<select id="selectDayPay" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO" resultType="egovframework.com.rd.usr.service.vo.DayPayVO">
		SELECT tab.*
		, DELIVERY_PRICE/*배달비*/
				- DAY_FEE	/*선정산수수료+콜수수료*/
				- INSURANCE /*4대보험*/
					AS ABLE_PRICE
		FROM(
			SELECT COOPERATOR_ID, MBER_ID, DAY, '1' AS IO_GUBUN, DELIVERY_PRICE
			, DELIVERY_PRICE - INSURANCE - FEE_CALL_COST AS 산정대상
			, CEILING((DELIVERY_PRICE - INSURANCE - FEE_CALL_COST) * FEE_ADMINSTRATOR) + FEE_CALL_COST AS DAY_FEE
			, INSURANCE
			, 'N' AS WEEK_YN, 'Y' AS USE_AT, ATCH_FILE_ID AS DAY_ATCH_FILE_ID, FEE_CALL_COST, DELIVERY_CNT, FEE_ID, RIDER_FEE_ID
			/*협력사 수익: 콜수수료*/
			, FLOOR(FEE_CALL_COST*FEE_COOPERATOR_CALL) AS FEE_COOPERATOR_CALL_COST
			FROM
			(
				SELECT fee_tab.*
					/*선지급수수료(%) + 건당 콜수수료(원)  =  수익*/
					/*, CEILING(DELIVERY_PRICE*FEE_ADMINSTRATOR) + DELIVERY_CNT*FEE_CALL AS DAY_FEE*/

					/* 고용보험(%)+ 산재보험(%)+ 원천세(%) + 시간제보험(원 최대7,000)  =  보험료 */
					, CEILING(DELIVERY_PRICE*(FEE_EMPLOYMENT_INSURANCE+FEE_INDUSTRIAL_INSURANCE+FEE_WITHHOLDING_TAX)) + if(DELIVERY_CNT*FEE_TIME_INSURANCE > #{timeInsuranceMaxFee}, #{timeInsuranceMaxFee}, DELIVERY_CNT*FEE_TIME_INSURANCE) AS INSURANCE
					/* 콜수수료 */
					, DELIVERY_CNT*FEE_CALL AS FEE_CALL_COST
				FROM (
					SELECT nvl(b.FEE_ADMINSTRATOR*0.01, 0) AS FEE_ADMINSTRATOR /* 선지급수수료(%) */
					, nvl(nvl(c.FEE_EMPLOYMENT_INSURANCE, b.FEE_EMPLOYMENT_INSURANCE)*0.01, 0) AS FEE_EMPLOYMENT_INSURANCE/* 고용보험(%) */
					, nvl(nvl(c.FEE_INDUSTRIAL_INSURANCE, b.FEE_INDUSTRIAL_INSURANCE)*0.01, 0) AS FEE_INDUSTRIAL_INSURANCE/* 산재보험(%) */
					, nvl(nvl(c.FEE_WITHHOLDING_TAX, b.FEE_WITHHOLDING_TAX)*0.01, 0) AS FEE_WITHHOLDING_TAX/* 원천세(%) */
					, nvl(nvl(c.FEE_TIME_INSURANCE, b.FEE_TIME_INSURANCE), 0) AS FEE_TIME_INSURANCE/* 시간제보험(원 최대7,000) */
					, nvl(nvl(c.FEE_CALL, b.FEE_CALL), 0) AS FEE_CALL/* 건당 콜수수료(원) */
					, a.COOPERATOR_ID, a.MBER_ID,a.RUN_DE AS DAY, SUM(a.DELIVERY_PRICE) AS DELIVERY_PRICE, SUM(if(a.DELIVERY_STATE = TRIM('전달완료'), 1, 0)) DELIVERY_CNT
					, b.FEE_ID, c.RIDER_FEE_ID, b.FEE_COOPERATOR_CALL*0.01 AS FEE_COOPERATOR_CALL
					, a.ATCH_FILE_ID
					FROM RD_DELIVERY_INFO a
					LEFT JOIN RD_COOPERATOR_FEE b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND b.use_at ='Y'
					LEFT JOIN RD_RIDER_FEE c ON a.COOPERATOR_ID = c.COOPERATOR_ID  AND a.MBER_ID = c.MBER_ID AND  c.use_at ='Y'
					WHERE ATCH_FILE_ID = #{dayAtchFileId}
					GROUP BY a.COOPERATOR_ID, a.MBER_ID, a.RUN_DE
				) fee_tab

			) sub_tab
		) tab
	</select>

	<select id="selectFixDay" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO" resultType="egovframework.com.rd.usr.service.vo.DayPayVO">
		SELECT tab.*
		, DELIVERY_PRICE/*배달비*/
				- DAY_FEE	/*선정산수수료+콜수수료+프로그램료*/
				- INSURANCE /*4대보험*/
					AS ABLE_PRICE
		FROM(
			SELECT COOPERATOR_ID, MBER_ID, DAY, '1' AS IO_GUBUN, DELIVERY_PRICE
			, DELIVERY_PRICE - INSURANCE - FEE_CALL_COST - FEE_PROGRAM_COST AS 산정대상
			, CEILING((DELIVERY_PRICE - INSURANCE - FEE_CALL_COST - FEE_PROGRAM_COST) * FEE_ADMINSTRATOR) + FEE_CALL_COST + FEE_PROGRAM_COST AS DAY_FEE
			, INSURANCE
			, 'N' AS WEEK_YN, 'Y' AS USE_AT, ATCH_FILE_ID AS DAY_ATCH_FILE_ID, FEE_CALL_COST, FEE_PROGRAM_COST,DELIVERY_CNT, FEE_ID, RIDER_FEE_ID
			/*협력사 수익: 콜수수료*/
			, FLOOR(FEE_CALL_COST*FEE_COOPERATOR_CALL) AS FEE_COOPERATOR_CALL_COST
			FROM
			(
				SELECT fee_tab.*
					/*선지급수수료(%) + 건당 콜수수료(원)  =  수익*/
					/*, CEILING(DELIVERY_PRICE*FEE_ADMINSTRATOR) + DELIVERY_CNT*FEE_CALL AS DAY_FEE*/

					/* 고용보험(%)+ 산재보험(%)+ 원천세(%) + 시간제보험(원 최대7,000)  =  보험료 */
					, CEILING(DELIVERY_PRICE*(FEE_EMPLOYMENT_INSURANCE+FEE_INDUSTRIAL_INSURANCE+FEE_WITHHOLDING_TAX)) + if(DELIVERY_CNT*FEE_TIME_INSURANCE > #{timeInsuranceMaxFee}, #{timeInsuranceMaxFee}, DELIVERY_CNT*FEE_TIME_INSURANCE) AS INSURANCE
					/* 콜수수료 */
					, DELIVERY_CNT*FEE_CALL AS FEE_CALL_COST
					/* 프로그램료 */
					, DELIVERY_CNT*FEE_PROGRAM AS FEE_PROGRAM_COST
				FROM (
					SELECT nvl(b.FEE_ADMINSTRATOR*0.01, 0) AS FEE_ADMINSTRATOR /* 선지급수수료(%) */
					, nvl(nvl(c.FEE_EMPLOYMENT_INSURANCE, b.FEE_EMPLOYMENT_INSURANCE)*0.01, 0) AS FEE_EMPLOYMENT_INSURANCE/* 고용보험(%) */
					, nvl(nvl(c.FEE_INDUSTRIAL_INSURANCE, b.FEE_INDUSTRIAL_INSURANCE)*0.01, 0) AS FEE_INDUSTRIAL_INSURANCE/* 산재보험(%) */
					, nvl(nvl(c.FEE_WITHHOLDING_TAX, b.FEE_WITHHOLDING_TAX)*0.01, 0) AS FEE_WITHHOLDING_TAX/* 원천세(%) */
					, nvl(nvl(c.FEE_TIME_INSURANCE, b.FEE_TIME_INSURANCE), 0) AS FEE_TIME_INSURANCE/* 시간제보험(원 최대7,000) */
					, nvl(nvl(c.FEE_CALL, b.FEE_CALL), 0) AS FEE_CALL/* 건당 콜수수료(원) */
					, nvl(b.FEE_PROGRAM, 0) AS FEE_PROGRAM /* 프로그램료(원) */
					, a.COOPERATOR_ID, a.MBER_ID,a.RUN_DE AS DAY, SUM(a.DELIVERY_PRICE) AS DELIVERY_PRICE, SUM(if(a.DELIVERY_STATE = TRIM('전달완료'), 1, 0)) DELIVERY_CNT
					, b.FEE_ID, c.RIDER_FEE_ID, b.FEE_COOPERATOR_CALL*0.01 AS FEE_COOPERATOR_CALL
					, a.ATCH_FILE_ID
					FROM RD_DELIVERY_INFO a
					LEFT JOIN RD_COOPERATOR_FEE b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND b.use_at ='Y'
					LEFT JOIN RD_RIDER_FEE c ON a.COOPERATOR_ID = c.COOPERATOR_ID  AND a.MBER_ID = c.MBER_ID AND  c.use_at ='Y'
					LEFT JOIN COMTNGNRLMBER d ON a.mber_id = d.mber_id
					JOIN COMTNFILE e ON a.ATCH_FILE_ID = e.ATCH_FILE_ID
					WHERE 1 = 1
						AND e.USE_AT ='Y'
						AND a.RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}
						<if test="searchNm != null and searchNm != ''">
						AND d.MBER_NM like '%' #{searchNm} '%'
						</if>
						AND a.FIX_DAY is null	/* 확정은 미확정 데이터를 대상으로만 한다 */
					GROUP BY a.COOPERATOR_ID, a.MBER_ID, a.RUN_DE
				) fee_tab

			) sub_tab
		) tab
	</select>

	<insert id="insertDayPay" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO">
		INSERT INTO RD_DAY_PAY
		(DYP_ID, COOPERATOR_ID,MBER_ID, DAY, IO_GUBUN, DELIVERY_PRICE, DELIVERY_CNT, DAY_FEE, INSURANCE, SEND_FEE, ABLE_PRICE, SEND_PRICE, WEEK_YN
		, DAY_ATCH_FILE_ID, WEK_ATCH_FILE_ID, WEEK_ID, TRAN_DAY, TELEGRAM_NO, USE_AT, CREAT_DT, CREAT_ID, ETC_ID)
		VALUES(#{dypId}, #{cooperatorId}, #{mberId}, #{day}, #{ioGubun}, #{deliveryPrice}, #{deliveryCnt}, #{dayFee}, #{insurance}, #{sendFee}, #{ablePrice}, #{sendPrice}, #{weekYn}
		, #{dayAtchFileId}, #{wekAtchFileId}, #{weekId}, #{tranDay}, #{telegramNo}, #{useAt}, SYSDATE(), #{creatId}, #{etcId})
	</insert>

	<select id="getAbleDateWeek" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="boolean">
		SELECT if(COUNT(week_id)>=1, false, true) able
		FROM RD_WEEK_INFO a
		JOIN COMTNFILE b ON a.ATCH_FILE_ID = b.ATCH_FILE_ID
		WHERE cooperator_id = #{cooperatorId}
			AND b.use_at ='Y'
			AND (#{accountsStDt} between ACCOUNTS_ST_DT  AND ACCOUNTS_ED_DT OR #{accountsEdDt} between ACCOUNTS_ST_DT  AND ACCOUNTS_ED_DT)
	</select>

	<select id="selectRiderDayPayList" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO" resultType="egovframework.com.rd.usr.service.vo.DayPayVO">

		/*SELECT MBER_ID, DAY, SUM(DELIVERY_PRICE) AS DELIVERY_PRICE, SUM(DAY_FEE)  AS DAY_FEE
		, SUM(INSURANCE) AS INSURANCE, SUM(ABLE_PRICE) AS ABLE_PRICE, WEEK_YN, MBER_NM

		FROM (*/
			SELECT * FROM (
				/* 입금액 */
				SELECT A.MBER_ID, A.DAY, A.DELIVERY_PRICE, A.DAY_FEE, A.INSURANCE, A.ABLE_PRICE, A.WEEK_YN, B.MBER_NM, A.ETC_ID, A.DELIVERY_CNT, A.CREAT_DT
				, 'DAY' AS dw_gubun
				FROM RD_DAY_PAY A
				LEFT JOIN COMTNGNRLMBER B ON A.MBER_ID = B.MBER_ID
				WHERE A.MBER_ID = #{mberId} AND A.IO_GUBUN ='1' AND A.USE_AT ='Y'
				AND A.DAY BETWEEN #{searchFromDate} AND #{searchToDate}

				UNION all

				/* 대여금 */
				SELECT A.MBER_ID, A.DAY, nvl(A.DELIVERY_PRICE, 0) AS DELIVERY_PRICE, nvl(send_price,0) AS DAY_FEE
				, nvl(A.INSURANCE,0) AS INSURANCE, nvl(send_price,0)*-1 AS ABLE_PRICE, A.WEEK_YN, B.MBER_NM, A.ETC_ID, A.DELIVERY_CNT, A.CREAT_DT
				, 'DAY' AS dw_gubun
				FROM RD_DAY_PAY A
				LEFT JOIN COMTNGNRLMBER B ON A.MBER_ID = B.MBER_ID
				WHERE A.MBER_ID = #{mberId} AND A.IO_GUBUN ='2' AND etc_id is NOT NULL AND A.USE_AT ='Y'
				AND WEEK_YN ='N'
				AND A.DAY BETWEEN #{searchFromDate} AND #{searchToDate}

				UNION ALL

				/* 대여금 */
				SELECT A.MBER_ID, A.TRAN_DAY AS DAY, 0 AS DELIVERY_PRICE, nvl(send_price,0) AS DAY_FEE, 0 AS INSURANCE
				, nvl(send_price,0)*-1 AS ABLE_PRICE, 'Y' AS WEEK_YN, B.MBER_NM, A.ETC_ID, 0 AS DELIVERY_CNT, A.CREAT_DT
				, dw_gubun
				FROM RD_WEEK_PAY A
				LEFT JOIN COMTNGNRLMBER B ON A.MBER_ID = B.MBER_ID
				WHERE A.MBER_ID = #{mberId} AND A.IO_GUBUN ='2' AND etc_id is NOT NULL AND A.USE_AT ='Y'
				AND A.TRAN_DAY BETWEEN #{searchFromDate} AND #{searchToDate}
			) tab
			ORDER BY DAY DESC, CREAT_DT DESC
		/*) tab
		GROUP BY MBER_ID, DAY, WEEK_YN*/
	</select>
	<update id="updateDayPayWeekConfirm" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_DAY_PAY
		SET WEEK_YN ='Y'
		, WEK_ATCH_FILE_ID = #{atchFileId}
		, WEEK_ID = #{weekId}
		,LAST_UPDT_PNTTM = SYSDATE()
		, LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE WEEK_YN ='N'
		AND USE_AT ='Y'
		AND IO_GUBUN = '1'
		AND COOPERATOR_ID = #{cooperatorId}
		AND DAY BETWEEN #{accountsStDt} AND #{accountsEdDt}
	</update>
	<update id="updateFixDayPayWeekConfirm" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_DAY_PAY a, (
				SELECT a.DYP_ID, a.COOPERATOR_ID, a.mber_id, wi.week_Id
				, a.DAY, wi.accounts_st_dt, wi.accounts_ed_dt
					, wi.ATCH_FILE_ID
					, d.MBER_NM
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					LEFT JOIN RD_DAY_PAY a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND wr.MBER_ID = a.mber_id AND a.use_at = 'Y' AND IO_GUBUN= '1'
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE b ON wi.ATCH_FILE_ID = b.ATCH_FILE_ID
						WHERE 1=1
							AND wr.FIX_DAY is NULL
							AND b.USE_AT ='Y'
							AND a.WEEK_YN = 'N'
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 							</if> -->
							<![CDATA[
							AND if(wi.accounts_st_dt <= a.DAY AND wi.accounts_ed_dt >= a.DAY, 1, 0) =1]]>

		) b
		SET a.WEEK_YN ='Y'
		, a.WEK_ATCH_FILE_ID = b.ATCH_FILE_ID
		, a.WEEK_ID = b.week_Id
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.WEEK_YN ='N'
		AND a.USE_AT ='Y'
		AND a.IO_GUBUN = '1'
		AND a.DYP_ID = b.DYP_ID
	</update>

	<update id="updateFixCooperatorProfitConfirm" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_COOPERATOR_PROFIT a, (
			SELECT wi.*
				FROM RD_WEEK_INFO wi
				JOIN COMTNFILE b ON wi.ATCH_FILE_ID = b.ATCH_FILE_ID
					WHERE 1=1
						AND wi.FIX_DAY is NULL
						AND b.USE_AT ='Y'
						AND wi.ATCH_FILE_ID = #{searchAtchFileId}
			) b
		SET a.WEEK_YN ='Y'
		, a.WEEK_ID = b.WEEK_ID
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}

		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.WEEK_YN ='N'
		AND a.USE_AT ='Y'
		<![CDATA[
		AND case when a.GUBUN IN ('C', 'E') AND b.accounts_st_dt <= a.DELIVERY_DAY AND b.accounts_ed_dt >= a.DELIVERY_DAY then 1
						when a.GUBUN IN ('D', 'B', 'O') then 1
						ELSE 0 END = 1	]]>
	</update>

	<update id="updateFixDayBalance"  parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_BALNCE a, (
				SELECT a.COOPERATOR_ID, a.MBER_ID, SUM(able_price) AS able_price
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					LEFT JOIN RD_DAY_PAY a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND wr.MBER_ID = a.mber_id AND a.use_at = 'Y' AND IO_GUBUN= '1'
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE b ON wi.ATCH_FILE_ID = b.ATCH_FILE_ID
						WHERE 1=1
							AND wr.FIX_DAY is NULL
							AND b.USE_AT ='Y'
							AND a.WEEK_YN = 'N'
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->

<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 							</if> -->

							<![CDATA[
							AND if(wi.accounts_st_dt <= a.DAY AND wi.accounts_ed_dt >= a.DAY, 1, 0) =1]]>
							AND a.WEEK_YN ='N'
							AND a.USE_AT ='Y'
							AND a.IO_GUBUN = '1'
							GROUP BY a.COOPERATOR_ID, a.MBER_ID
		)b
		SET a.BALANCE0 = a.BALANCE0 - b.able_price
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.MBER_ID = b.MBER_ID
	</update>
	<update id="updateDayPayWeekConfirm2" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_DAY_PAY
		SET WEEK_YN ='Y'
		, WEK_ATCH_FILE_ID = #{atchFileId}
		, WEEK_ID = #{weekId}
		,LAST_UPDT_PNTTM = SYSDATE()
		, LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE WEEK_YN ='N'
		AND USE_AT ='Y'
		AND IO_GUBUN = '2'
		AND COOPERATOR_ID = #{cooperatorId}
	</update>
	<update id="updateFixDayPayWeekConfirm2" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_DAY_PAY a,  (
				SELECT a.COOPERATOR_ID, a.mber_id, wi.ATCH_FILE_ID, wi.WEEK_ID
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					JOIN RD_DAY_PAY a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND wr.MBER_ID = a.mber_id AND a.use_at = 'Y' AND IO_GUBUN= '2'
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE b ON wi.ATCH_FILE_ID = b.ATCH_FILE_ID
						WHERE 1=1
							AND wr.FIX_DAY is NULL
							AND b.USE_AT = 'Y'
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 							</if> -->

		) b
		SET a.WEEK_YN ='Y'
		, a.WEK_ATCH_FILE_ID = b.ATCH_FILE_ID
		, a.WEEK_ID = b.WEEK_ID
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.WEEK_YN ='N'
		AND a.USE_AT ='Y'
		AND a.IO_GUBUN = '2'
		AND a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.mber_id = b.mber_id
	</update>
	<update id="updateFixCooperatorPayConfirm" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		update RD_COOPERATOR_PAY a, (
			SELECT wi.*
				FROM RD_WEEK_INFO wi
				JOIN COMTNFILE b ON wi.ATCH_FILE_ID = b.ATCH_FILE_ID
					WHERE 1=1
						AND wi.FIX_DAY is NULL
						AND b.USE_AT ='Y'
						AND wi.ATCH_FILE_ID = #{searchAtchFileId}
			) b
		SET a.WEEK_YN ='Y'
		, a.WEEK_ID = b.week_Id
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.WEEK_YN ='N'
		AND a.USE_AT ='Y'
	</update>

	<update id="updateFixDayBalance2" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE RD_BALNCE a, (
				SELECT a.COOPERATOR_ID, a.MBER_ID, SUM(day_fee+send_fee+send_price) able_price, SUM(send_fee+send_price) able_price_day
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					JOIN RD_DAY_PAY a ON wi.COOPERATOR_ID = a.COOPERATOR_ID AND wr.MBER_ID = a.mber_id AND a.use_at = 'Y' AND  IO_GUBUN= '2'
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					LEFT JOIN COMTNFILE b ON wi.atch_file_id = b.atch_file_id
						WHERE 1=1
							AND wr.FIX_DAY is NULL
							AND b.USE_AT ='Y'
							AND wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM LIKE '%' #{searchNm} '%' -->
<!-- 							</if> -->
							and a.WEEK_YN ='N'
							AND a.USE_AT ='Y'
							AND a.IO_GUBUN = '2'
							GROUP BY a.COOPERATOR_ID, a.MBER_ID
		)b
		SET a.BALANCE0 = a.BALANCE0 + b.able_price_day
		, a.BALANCE1 = a.BALANCE1 - b.able_price
		, a.LAST_UPDT_PNTTM = SYSDATE()
		, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.MBER_ID = b.MBER_ID

	</update>
	<select id="selectDayPayIoGubn2List" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekPayVO">
		SELECT COOPERATOR_ID, MBER_ID, 'DAY' DW_GUBUN, '2', IO_GUBUN, NVL(DAY_FEE, 0)+NVL(INSURANCE,0)+NVL(SEND_FEE,0) AS FEE
		, SEND_PRICE, DYP_ID, TRAN_DAY, TELEGRAM_NO,'Y' AS USE_AT, ETC_ID
		from RD_DAY_PAY
		WHERE WEEK_YN = 'N'
		AND USE_AT = 'Y'
		AND IO_GUBUN = '2'
		AND COOPERATOR_ID = #{cooperatorId}
	</select>
		<select id="selectFixDayPayIoGubn2List" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekPayVO">
		SELECT COOPERATOR_ID, MBER_ID, 'DAY' DW_GUBUN, '2', IO_GUBUN, NVL(DAY_FEE, 0)+NVL(INSURANCE,0)+NVL(SEND_FEE,0) AS FEE
		, SEND_PRICE, DYP_ID, TRAN_DAY, TELEGRAM_NO,'Y' AS USE_AT, ETC_ID
		from RD_DAY_PAY
		WHERE WEEK_YN = 'N'
		AND USE_AT = 'Y'
		AND IO_GUBUN = '2'
		AND (COOPERATOR_ID, mber_id) in (
				SELECT wi.COOPERATOR_ID, wr.mber_id
					FROM RD_WEEK_INFO wi
					LEFT JOIN RD_WEEK_RIDER_INFO wr ON wi.WEEK_ID = wr.week_id
					LEFT JOIN COMTNGNRLMBER d ON wr.mber_id = d.mber_id
					JOIN COMTNFILE e ON wi.atch_file_id = e.atch_file_id
						WHERE 1=1
							AND e.USE_AT ='Y'
							AND wr.FIX_DAY is NULL
							and wi.ATCH_FILE_ID = #{searchAtchFileId}
<!-- 							AND (wi.ACCOUNTS_ST_DT BETWEEN #{searchFromDate} AND #{searchToDate} or wi.ACCOUNTS_ED_DT BETWEEN #{searchFromDate} AND #{searchToDate}) -->
<!-- 							<if test="searchNm != null and searchNm != ''"> -->
<!-- 							AND d.MBER_NM like '%' #{searchNm} '%' -->
<!-- 							</if> -->

		)
	</select>

	<insert id="insertTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		INSERT INTO RD_TRANSFER
		(TRAN_DAY, TELEGRAM_NO, DRW_ACCOUNT_CNTN, RV_BANK_CODE, RV_ACCOUNT, RV_ACCOUNT_CNTN, AMOUNT, RES_ALL_YN, CREAT_DT, CREAT_ID)
		VALUES(#{tranDay}, #{telegram_no}, #{drw_account_cntn}, #{rv_bank_code}, #{rv_account}, #{rv_account_cntn}, #{amount}, #{res_all_yn}, SYSDATE(), #{creatId})
	</insert>
	<select id="selectTelegranNo" resultType="java.lang.String">
		SELECT LPAD(NEXTVAL(SQ_TRANSFER), '6', '0')
	</select>

	<update id="updateTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_TRANSFER
		SET STATUS = #{status}
			<if test='statusCd != null and statusCd != ""'>
			, STATUS_CD = #{statusCd}
			</if>
			<if test='sendDt != null and sendDt != ""'>
			, SEND_DT = #{sendDt}
			</if>
			<if test='sendTm != null and sendTm != ""'>
			, SEND_TM = #{sendTm}
			</if>
			<if test='natvTrNo != null and natvTrNo != ""'>
			, NATV_TR_NO = #{natvTrNo}
			</if>
			<if test='errorCode != null and errorCode != ""'>
			, ERROR_CODE = #{errorCode}
			</if>
			<if test='errorMessage != null and errorMessage != ""'>
			, ERROR_MESSAGE = #{errorMessage}
			</if>
		WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
	</update>
	<select id="selectForUpdateBalanceDayTran" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE (cooperator_id, mber_id) IN (
			SELECT cooperator_id, #{cooperatorMberId} FROM RD_DAY_PAY
			WHERE (tran_day, telegram_no) IN  (
				SELECT tran_day, telegram_no FROM RD_TRANSFER
				WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
			)
			AND use_At ='Y'
		)
		FOR UPDATE
	</select>
	<update id="updateBalanceDayTran" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_BALNCE a, (
				SELECT a.cooperator_id, #{cooperatorMberId} AS MBER_ID, b.cost
				FROM RD_DAY_PAY a
				LEFT JOIN RD_COOPERATOR_PROFIT b ON a.DYP_ID = b.DYP_ID
				WHERE (tran_day, telegram_no) IN  (
					SELECT tran_day, telegram_no FROM RD_TRANSFER
					WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
				)
				AND a.USE_AT ='Y'
			)b
		set a.BALANCE0 = a.BALANCE0 + b.cost
			, a.LAST_UPDT_PNTTM = SYSDATE()
			, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.mber_id = b.MBER_ID

	</update>

	<select id="selectBalanceDayTran" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO" resultType="egovframework.com.rd.usr.service.vo.ProfitVO">
			SELECT a.cooperator_id, #{cooperatorMberId} AS MBER_ID, b.cost, tran_day, telegram_no
			FROM RD_DAY_PAY a
			LEFT JOIN RD_COOPERATOR_PROFIT b ON a.DYP_ID = b.DYP_ID
			WHERE (tran_day, telegram_no) IN  (
				SELECT tran_day, telegram_no FROM RD_TRANSFER
				WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
			)
			AND a.use_At ='Y'
	</select>
	<insert id="insertSchAccout" parameterType="egovframework.com.rd.usr.service.vo.DoszSchAccoutVO">
		INSERT INTO RD_SCH_ACCOUNT
		(TRAN_DAY, TELEGRAM_NO, BANK_CODE, ACCOUNT, AMOUNT, RES_ALL_YN, CREAT_DT, CREAT_ID)
		VALUES(#{tranDay}, #{telegram_no}, #{bank_code}, #{account},  #{amount}, #{res_all_yn}, SYSDATE(), #{creatId})
	</insert>

	<update id="updateSchAccout" parameterType="egovframework.com.rd.usr.service.vo.DoszSchAccoutVO">
		UPDATE RD_SCH_ACCOUNT
		SET
			 STATUS = #{status}
			<if test='statusCd != null and statusCd != ""'>
			, STATUS_CD = #{statusCd}
			</if>
			<if test='sendDt != null and sendDt != ""'>
			, SEND_DT = #{sendDt}
			</if>
			<if test='sendTm != null and sendTm != ""'>
			, SEND_TM = #{sendTm}
			</if>
			<if test='natvTrNo != null and natvTrNo != ""'>
			, NATV_TR_NO = #{natvTrNo}
			</if>
			<if test='depositor != null and depositor != ""'>
			, DEPOSITOR = #{depositor}
			</if>
			<if test='errorCode != null and errorCode != ""'>
			, ERROR_CODE = #{errorCode}
			</if>
			<if test='errorMessage != null and errorMessage != ""'>
			, ERROR_MESSAGE = #{errorMessage}
			</if>
		WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
	</update>


	<select id="selectHistory" parameterType="egovframework.com.rd.usr.service.vo.HistoryVO" resultType="egovframework.com.rd.usr.service.vo.HistoryVO">

		SELECT * FROM(
			SELECT COOPERATOR_ID,'DAY' AS DW_GUBUN,'선지급' AS GUBUN, DYP_ID AS ID, a.SEND_PRICE, a.DAY_FEE+a.INSURANCE+a.SEND_FEE AS FEE
			, b.TRAN_DAY , b.RV_ACCOUNT, b.STATUS, b.STATUS_cd, b.error_code
			, case when b.STATUS='200' then '이체' when b.STATUS= '999' then '처리중' when b.STATUS= '400' AND b.error_code='VTIM' then '처리중' when b.STATUS= '400' AND b.error_code='0011' then '처리중' ELSE '실패' end  AS STATUS_NM
			, b.SEND_DT, b.SEND_TM, b.CREAT_DT, b.error_message
			FROM RD_DAY_PAY a
			LEFT JOIN RD_TRANSFER b ON a.TRAN_DAY = b.TRAN_DAY AND a.TELEGRAM_NO = b.TELEGRAM_NO
			WHERE 1=1/*a.USE_AT ='Y'*/
				AND week_yn ='N'
				AND IO_GUBUN ='2'
				AND COOPERATOR_ID = #{searchCooperatorId}
				AND a.ETC_ID IS null	/*대출 제외*/
				AND MBER_ID = #{schId}
				AND a.TRAN_DAY BETWEEN #{searchFromDate} AND #{searchToDate}

			UNION all

			SELECT COOPERATOR_ID, DW_GUBUN, if(DW_GUBUN='DAY', '선지급', '확정') AS GUBUN, WKP_ID AS ID, a.SEND_PRICE, a.FEE
			, b.TRAN_DAY , b.RV_ACCOUNT, b.STATUS, b.STATUS_cd, b.error_code
			, case when b.STATUS='200' then '이체' when b.STATUS= '999' then '처리중' when b.STATUS= '400' AND b.error_code='VTIM' then '처리중' when b.STATUS= '400' AND b.error_code='0011' then '처리중' ELSE '실패' end  AS STATUS_NM
			, b.SEND_DT, b.SEND_TM, b.CREAT_DT, b.error_message
			FROM RD_WEEK_PAY a
			LEFT JOIN RD_TRANSFER b ON a.tran_day = b.tran_day AND a.TELEGRAM_NO = b.TELEGRAM_NO
			WHERE a.USE_AT ='Y'
				AND IO_GUBUN ='2'
				AND COOPERATOR_ID = #{searchCooperatorId}
				AND a.ETC_ID IS null	/*대출 제외*/
				AND MBER_ID = #{schId}
				AND a.TRAN_DAY BETWEEN #{searchFromDate} AND #{searchToDate}
		) tab
		ORDER BY creat_dt desc
	</select>

	<select id="selectTakeDeliveryInfoListByMberId" parameterType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO" resultType="egovframework.com.rd.usr.service.vo.DeliveryInfoVO">
			SELECT
			<choose>
				<when test="isSum == true">
					SUM(DELIVERY_PRICE) DELIVERY_PRICE
				</when>
				<otherwise>
					COOPERATOR_ID, COOPERATOR_NM,REGISTRATION_SN,REGISTRATION_NM,RUN_DE,DELIVERY_SN,DELIVERY_STATE,
					SERVICE_TYPE,DELIVERY_TYPE,RIDER_ID,MBER_ID,RIDER_NM,DELIVERY_METHOD,SHOP_SN,SHOP_NM,GOODS_PRICE,
					PICKUP_ADDR,DESTINATION_ADDR,ORDER_DT,OPERATE_RIDER_DT,SHOP_COMEIN_DT,PICKUP_FINIST_DT,DELIVERY_FINIST_DT,
					DISTANCE,ADD_DELIVERY_REASON,ADD_DELIVERY_DESC,PICKUP_LAW_DONG,BASIC_PRICE,WEATHER_PRIMAGE,ADD_PRIMAGE,
					PEAK_PRIMAGE_ETC,DELIVERY_PRICE,RIDER_CAUSE_YN,ADD_PRIMAGE_DESC,NOTE,ATCH_FILE_ID,CREAT_DT,CREAT_ID
				</otherwise>
			</choose>
			FROM RD_DELIVERY_INFO
			WHERE
				MBER_ID = #{searchId}
				<![CDATA[AND RUN_DE>= #{searchFromDate}AND RUN_DE <= #{searchToDate} ]]>
			ORDER BY run_de DESC;

	</select>

	<update id="updateDayPayByTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_DAY_PAY
		set USE_AT = 'N'
		WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
	</update>

	<update id="updateWeekPayByTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_WEEK_PAY
		set USE_AT = 'N'
		WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
	</update>
	<select id="selectForUPdateBalanceByWeekTran" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT * FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
		SELECT COOPERATOR_ID, MBER_ID FROM RD_WEEK_PAY
				WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
				)
		FOR UPDATE
	</select>
	<select id="selectForUPdateBalanceByDayTran" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT * FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
		SELECT COOPERATOR_ID, MBER_ID FROM RD_DAY_PAY
				WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
				)
		FOR UPDATE
	</select>
	<update id="updateBalanceWeekPayByTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_BALNCE a, (
			SELECT * FROM RD_WEEK_PAY
				WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
			) b
		SET a.BALANCE1 = a.BALANCE1 + b.FEE + b.SEND_PRICE
			, a.LAST_UPDT_PNTTM = SYSDATE()
			, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.MBER_ID = b.MBER_ID
	</update>
	<update id="updateBalanceDayPayByTransfer" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_BALNCE a, (
			SELECT * FROM RD_DAY_PAY
				WHERE TRAN_DAY = #{tranDay} AND  TELEGRAM_NO = #{telegram_no} AND USE_AT ='Y'
			) b
		SET a.BALANCE0 = a.BALANCE0 + b.SEND_FEE + b.SEND_PRICE
			, a.LAST_UPDT_PNTTM = SYSDATE()
			, a.LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE a.COOPERATOR_ID = b.COOPERATOR_ID
		AND a.MBER_ID = b.MBER_ID
	</update>

	<select id="selectEtcList" parameterType="egovframework.com.rd.usr.service.vo.DayPayVO" resultType="egovframework.com.rd.usr.service.vo.EtcVO">
			SELECT b.ETC_ID, b.COOPERATOR_ID, b.MBER_ID, b.GUBUN, a.RUN_DE AS DAY, b.PAYBACK_DAY, b.PAYBACK_COST, b.PAYBACK_COST_ALL, DATE_FORMAT(b.AUTH_REQUEST_DT, '%Y%m%d') AUTH_REQUEST_DT
			, DATE_FORMAT(b.AUTH_RESPONS_DT, '%Y%m%d') AUTH_RESPONS_DT, b.RESPONS_AT, b.USE_AT, DATE_FORMAT(b.CREAT_DT, '%Y%m%d') CREAT_DT, b.CREAT_ID, b.LAST_UPDT_PNTTM, b.LAST_UPDUSR_ID
			, if(c.ETC_ID IS NULL AND d.ETC_ID IS NULL, 'Y', 'N') as ABLE_YN /*하루에 한번만 출금할수 있도록 */
			, (
					SELECT COUNT(DYP_ID) FROM RD_DAY_PAY sub_c
					WHERE b.COOPERATOR_ID = sub_c.COOPERATOR_ID AND b.MBER_ID = sub_c.MBER_ID  AND b.ETC_ID = sub_c.ETC_ID AND sub_c.IO_GUBUN ='2' AND sub_c.use_at ='Y' AND sub_c.week_yn ='N'
			)
			+ (
					SELECT COUNT(WKP_ID) FROM RD_WEEK_PAY sub_d
					WHERE b.COOPERATOR_ID = sub_d.COOPERATOR_ID AND b.MBER_ID = sub_d.MBER_ID  AND b.ETC_ID = sub_d.ETC_ID AND sub_d.IO_GUBUN ='2' AND sub_d.use_at ='Y'
			) SUM_ETC_CNT /* join이 안됨.ㅠㅜ*/
			FROM RD_DELIVERY_INFO a
			JOIN RD_ETC b on a.COOPERATOR_ID = b.COOPERATOR_ID AND a.MBER_ID = b.MBER_ID AND b.finish_at ='N' AND AUTH_RESPONS_DT IS NOT NULL AND RESPONS_AT ='Y'
			LEFT JOIN RD_DAY_PAY c ON b.COOPERATOR_ID = c.COOPERATOR_ID AND b.MBER_ID = c.MBER_ID  AND b.ETC_ID = c.ETC_ID AND c.IO_GUBUN ='2' AND c.day = a.RUN_DE
			LEFT JOIN RD_WEEK_PAY d ON b.COOPERATOR_ID = d.COOPERATOR_ID AND b.MBER_ID = d.MBER_ID  AND b.ETC_ID = d.ETC_ID AND d.IO_GUBUN = '2' AND d.TRAN_DAY = a.RUN_DE
			LEFT JOIN COMTNGNRLMBER e ON a.mber_id = e.mber_id
			JOIN COMTNFILE f ON a.ATCH_FILE_ID = f.ATCH_FILE_ID
			WHERE 1 = 1
				AND f.USE_AT ='Y'
				AND a.RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}
				<if test="searchNm != null and searchNm != ''">
				AND e.MBER_NM like '%' #{searchNm} '%'
				</if>
				AND a.FIX_DAY is null	/* 확정은 미확정 데이터를 대상으로만 한다 */
				AND a.RUN_DE >= b.START_DT /*실행일 이후부터 대상*/
			GROUP BY b.etc_id, a.mber_id, a.RUN_DE
	</select>
	<update id="finishEtc" parameterType="egovframework.com.rd.usr.service.vo.EtcVO">
		UPDATE RD_ETC
		SET FINISH_AT = 'Y'
		, LAST_UPDT_PNTTM = SYSDATE()
		, LAST_UPDUSR_ID = #{lastUpdusrId}
		WHERE etc_id = #{etcId}
		AND 'true' = (
			<![CDATA[SELECT if(payback_cost_all <= send_price, 'true', 'false')]]>
			FROM RD_ETC a,
			(
				SELECT NVL(SUM(send_price), 0)  as send_price
				FROM(
					SELECT send_price FROM RD_DAY_PAY WHERE etc_id = #{etcId} AND week_yn !='Y'/* 정산완료된 일정산건은 주정산으로 이동되었으니 제외*/
					UNION ALL
					SELECT send_price FROM RD_WEEK_PAY WHERE etc_id = #{etcId}
				) c
			) b
			WHERE etc_id = #{etcId}
		)
	</update>

	<insert id="insertProfit" parameterType="egovframework.com.rd.usr.service.vo.ProfitVO">
		INSERT INTO RD_PROFIT
		(PROFIT_ID, COOPERATOR_ID, MBER_ID, GUBUN, COST, DELIVERY_COST, DELIVERY_CNT, DELIVERY_DAY, DYP_ID, FEE_ID, RIDER_FEE_ID, COP_ID, CREAT_DT, CREAT_ID)
		VALUES(#{profitId}, #{cooperatorId}, #{mberId}, #{gubun}, #{cost}, #{deliveryCost}, #{deliveryCnt}, #{deliveryDay}, #{dypId}, #{feeId}, #{riderFeeId}, #{copId}, SYSDATE(), #{creatId})
	</insert>

	<insert id="insertCooperatorProfit" parameterType="egovframework.com.rd.usr.service.vo.ProfitVO">
		INSERT INTO RD_COOPERATOR_PROFIT
		(COOFIT_ID, PROFIT_ID, COOPERATOR_ID, MBER_ID, GUBUN, COST, DELIVERY_COST, DELIVERY_CNT, DELIVERY_DAY, DYP_ID, FEE_ID, RIDER_FEE_ID, WEEK_YN, CREAT_DT, CREAT_ID)
		VALUES(#{coofitId}, #{profitId}, #{cooperatorId}, #{mberId}, #{gubun}, #{cost}, #{deliveryCost}, #{deliveryCnt}, #{deliveryDay}, #{dypId}, #{feeId}, #{riderFeeId}, #{weekYn}, SYSDATE(), #{creatId})
	</insert>

	<insert id="insertSalesProfit" parameterType="egovframework.com.rd.usr.service.vo.ProfitVO">
		INSERT INTO RD_SALES_PROFIT
		(SALFIT_ID, PROFIT_ID, EMPLYR_ID, COOPERATOR_ID, MBER_ID, GUBUN, COST, DELIVERY_CNT, DELIVERY_DAY, DYP_ID, FEE_ID, RIDER_FEE_ID, COP_ID, CREAT_DT, CREAT_ID)
		VALUES(#{salfitId}, #{profitId}, #{emplyrId}, #{cooperatorId}, #{mberId}, #{gubun}, #{cost}, #{deliveryCnt}, #{deliveryDay}, #{dypId}, #{feeId}, #{riderFeeId}, #{copId}, SYSDATE(), #{creatId})
	</insert>

	<update id="deleteProfit" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_PROFIT
		SET USE_AT ='N'
		WHERE PROFIT_ID IN (
			SELECT b.PROFIT_ID FROM RD_DAY_PAY a
			LEFT JOIN RD_PROFIT b ON a.DYP_ID = b.DYP_ID AND b.GUBUN = 'D' AND b.USE_AT ='Y'
			WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
		)
	</update>
	<update id="deleteProfitByCoop" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_PROFIT
		SET USE_AT ='N'
		WHERE PROFIT_ID IN (
			SELECT b.PROFIT_ID FROM RD_COOPERATOR_PAY a
			LEFT JOIN RD_PROFIT b ON a.cop_id = b.cop_id AND b.GUBUN = 'D' AND b.USE_AT ='Y'
			WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
		)
	</update>
	<update id="deleteSalesProfitByCoop" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_SALES_PROFIT
		SET USE_AT ='N'
		WHERE SALFIT_ID IN (
			SELECT b.SALFIT_ID FROM RD_COOPERATOR_PAY a
			LEFT JOIN RD_SALES_PROFIT b ON a.cop_id = b.cop_id AND b.GUBUN = 'D' AND b.USE_AT ='Y'
			WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
		)
	</update>
	<update id="deleteCooperatorProfit" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_COOPERATOR_PROFIT
		SET USE_AT ='N'
		WHERE COOFIT_ID IN (
			SELECT b.COOFIT_ID FROM RD_DAY_PAY a
			LEFT JOIN RD_COOPERATOR_PROFIT b ON a.DYP_ID = b.DYP_ID AND b.GUBUN = 'D' AND b.use_at ='Y'
			WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
		)
	</update>
	<update id="deleteSalesProfit" parameterType="egovframework.com.rd.usr.service.vo.DoszTransferVO">
		UPDATE RD_SALES_PROFIT
		SET USE_AT ='N'
		WHERE SALFIT_ID IN (
			SELECT b.SALFIT_ID FROM RD_DAY_PAY a
			LEFT JOIN RD_SALES_PROFIT b ON a.DYP_ID = b.DYP_ID AND b.GUBUN = 'D' AND b.use_at ='Y'
			WHERE TRAN_DAY = #{tranDay} AND TELEGRAM_NO = #{telegram_no}
		)
	</update>

	<select id="selectForUPdateBalanceByParam" parameterType="egovframework.com.rd.usr.service.vo.BalanceVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
				SELECT a.COOPERATOR_ID, a.mber_id
				FROM RD_DELIVERY_INFO a
				LEFT JOIN RD_COOPERATOR_FEE b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND b.use_at ='Y'
				LEFT JOIN RD_RIDER_FEE c ON a.COOPERATOR_ID = c.COOPERATOR_ID  AND a.MBER_ID = c.MBER_ID AND  c.use_at ='Y'
				LEFT JOIN COMTNGNRLMBER d ON a.mber_id = d.mber_id
				JOIN COMTNFILE e ON a.ATCH_FILE_ID = e.ATCH_FILE_ID
				WHERE 1 = 1
					AND e.USE_AT ='Y'
					AND a.RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}

					AND d.MBER_NM like '%' #{searchNm} '%'

					AND a.FIX_DAY is null	/* 확정은 미확정 데이터를 대상으로만 한다 */
				GROUP BY a.COOPERATOR_ID, a.MBER_ID

				UNION

				SELECT a.COOPERATOR_ID, #{cooperatorMberId} AS MBER_ID
				FROM RD_DELIVERY_INFO a
				LEFT JOIN RD_COOPERATOR_FEE b ON a.COOPERATOR_ID = b.COOPERATOR_ID AND b.use_at ='Y'
				LEFT JOIN RD_RIDER_FEE c ON a.COOPERATOR_ID = c.COOPERATOR_ID  AND a.MBER_ID = c.MBER_ID AND  c.use_at ='Y'
				LEFT JOIN COMTNGNRLMBER d ON a.mber_id = d.mber_id
				JOIN COMTNFILE e ON a.ATCH_FILE_ID = e.ATCH_FILE_ID
				WHERE 1 = 1
					AND e.USE_AT ='Y'
					AND a.RUN_DE BETWEEN #{searchFromDate} AND #{searchToDate}

					AND d.MBER_NM like '%' #{searchNm} '%'

					AND a.FIX_DAY is null	/* 확정은 미확정 데이터를 대상으로만 한다 */
				GROUP BY a.COOPERATOR_ID
		)
		FOR UPDATE
	</select>

	<select id="selectForUPdateBalanceByMberId" parameterType="egovframework.com.rd.usr.service.vo.BalanceVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE 1=1
			AND COOPERATOR_ID = #{cooperatorId}
			AND MBER_ID = #{mberId}
		FOR UPDATE
	</select>
	<select id="selectBalanceById" parameterType="egovframework.com.rd.usr.service.vo.BalanceVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		select * from RD_BALNCE
		WHERE COOPERATOR_ID = #{cooperatorId} and MBER_ID = #{mberId}
	</select>
	<insert id="insertBalance"  parameterType="egovframework.com.rd.usr.service.vo.BalanceVO">
		INSERT INTO RD_BALNCE
		(COOPERATOR_ID, MBER_ID, BALANCE0, BALANCE1)
		VALUES(#{cooperatorId}, #{mberId}, #{balance0}, #{balance1})
	</insert>

	<update id="updateBalance"  parameterType="egovframework.com.rd.usr.service.vo.BalanceVO">
		UPDATE RD_BALNCE
		SET LAST_UPDT_PNTTM = SYSDATE()
			, LAST_UPDUSR_ID = #{lastUpdusrId}
		<if test="balance0 != 0">
			, BALANCE0 = BALANCE0+ #{balance0}
		</if>
		<if test="balance1 != 0">
			, BALANCE1 = BALANCE1+ #{balance1}
		</if>
		WHERE COOPERATOR_ID = #{cooperatorId} and MBER_ID = #{mberId}
	</update>
	<update id="updateFileUploadErrMsg" parameterType="egovframework.com.cmm.service.FileVO">
		UPDATE COMTNFILEDETAIL
		SET ERORR_MSG = SUBSTR(#{erorrMsg}, 1, 900)
		WHERE ATCH_FILE_ID = #{atchFileId}
	</update>
	<update id="deleteAtchFile" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		UPDATE COMTNFILE
		SET USE_AT = 'N'
		WHERE ATCH_FILE_ID = #{searchAtchFileId}
	</update>
	<select id="selectFixWeekInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT COUNT(b.WEEK_ID) TOTAL_CNT
		FROM RD_WEEK_INFO a
			LEFT JOIN RD_WEEK_RIDER_INFO b ON a.WEEK_ID = b.WEEK_ID
		WHERE a.ATCH_FILE_ID = #{searchAtchFileId}
		AND b.FIX_DAY IS NOT NULL
	</select>
	<select id="selectFixDeleveryInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT COUNT(a.COOPERATOR_ID) TOTAL_CNT
		FROM RD_DELIVERY_INFO a

		WHERE a.ATCH_FILE_ID = #{searchAtchFileId}
		AND a.FIX_DAY IS NOT NULL
	</select>

	<delete id="deleteDeliveryInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		DELETE from RD_DELIVERY_INFO
		WHERE ATCH_FILE_ID = #{searchAtchFileId}
	</delete>

	<select id="selectForUpdateDayByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
			SELECT COOPERATOR_ID, MBER_ID
			FROM RD_DELIVERY_INFO a
			WHERE a.ATCH_FILE_ID = #{searchAtchFileId}
		)
		FOR UPDATE
	</select>
	<select id="selectForUpdateWeekByAtchFileId" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.BalanceVO">
		SELECT *
		FROM RD_BALNCE
		WHERE (COOPERATOR_ID, MBER_ID) IN (
			SELECT a.COOPERATOR_ID, b.MBER_ID
			FROM RD_WEEK_INFO a
			LEFT JOIN RD_WEEK_RIDER_INFO b on a.WEEK_ID = b.WEEK_ID
			WHERE a.ATCH_FILE_ID = #{searchAtchFileId}
		)
		FOR UPDATE
	</select>

	<delete id="deleteWeekRiderInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		DELETE FROM RD_WEEK_RIDER_INFO
		WHERE WEEK_ID IN (SELECT WEEK_ID FROM RD_WEEK_INFO WHERE ATCH_FILE_ID = #{searchAtchFileId})
	</delete>


	<delete id="deleteWeekInfo" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		DELETE FROM RD_WEEK_INFO
		WHERE ATCH_FILE_ID = #{searchAtchFileId}
	</delete>


	<select id="selectWeekInfoOutByParam" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekInfoVO">
		SELECT
			WEEK_ID,a.COOPERATOR_ID,ACCOUNTS_ST_DT,ACCOUNTS_ED_DT ,DELIVERY_COST ,ADD_ACCOUNTS ,OPERATING_COST,MANAGEMENT_COST
			,OPERATING_FEE,ETC_COST,TIME_INSURANCE,OWNER_EMPLOYMENT_INSURANCE,RIDER_EMPLOYMENT_INSURANCE,OWNER_INDUSTRIAL_INSURANCE
			,RIDER_INDUSTRIAL_INSURANCE,WITHHOLDING_TAX_INSURANCE_SUM,EMPLOYMENT_INSURANCE_ACCOUNTS,INDUSTRIAL_INSURANCE_ACCOUNTS
			,G,ACCOUNTS_SCHEDULE_COST,TAX_BILL_SUPPLY,TAX_BILL_ADD ,TAX_BILL_SUM ,NOTE,a.ATCH_FILE_ID,a.CREAT_DT,a.CREAT_ID
			,OPERATING_COST_ADD, c.COOPERATOR_NM
		FROM RD_WEEK_INFO_OUT a
		JOIN COMTNFILE b ON a.ATCH_FILE_ID = b.ATCH_FILE_ID
		LEFT JOIN RD_COOPERATOR c ON a.COOPERATOR_ID = c.COOPERATOR_ID
		WHERE 1=1
			AND b.USE_AT ='Y'
			AND a.ATCH_FILE_ID = #{searchAtchFileId}
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND a.COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
	</select>

	<select id="selectWeekRiderInfoOutByParam" parameterType="egovframework.com.rd.usr.service.vo.WeekInfoVO" resultType="egovframework.com.rd.usr.service.vo.WeekRiderInfoVO">
		SELECT
			b.WEEK_ID,b.NO,a.cooperator_id,b.MBER_ID,b.MBER_NM,b.CNT,b.DELIVERY_COST,b.ADD_COST,b.SUM_COST,b.TIME_INSURANCE,b.NECESSARY_EXPENSES,b.PAY,b.OWNER_EMPLOYMENT_INSURANCE
			,b.RIDER_EMPLOYMENT_INSURANCE,b.OWNER_INDUSTRIAL_INSURANCE,b.RIDER_INDUSTRIAL_INSURANCE,b.WITHHOLDING_TAX_INSURANCE_SUM
			,b.OWNER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.RIDER_EMPLOYMENT_INSURANCE_ACCOUNTS,b.SUM_EMPLOYMENT_INSURANCE_ACCOUNTS
			,b.OWNER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.RIDER_INDUSTRIAL_INSURANCE_ACCOUNTS,b.SUM_INDUSTRIAL_INSURANCE_ACCOUNTS
			,b.OPERATING_COST,b.ACCOUNTS_COST,b.INCOME_TAX,b.RESIDENCE_TAX,b.WITHHOLDING_TAX,b.GIVE_PAY,b.CREAT_DT,b.CREAT_ID
			,b.OPERATING_COST_ADD
		FROM RD_WEEK_INFO_OUT a
		LEFT JOIN RD_WEEK_RIDER_INFO_OUT b on a.week_id = b.week_id
		LEFT JOIN COMTNGNRLMBER c ON b.MBER_ID = c.MBER_ID
		JOIN COMTNFILE d ON a.ATCH_FILE_ID = d.ATCH_FILE_ID
		WHERE 1 = 1
			AND d.USE_AT = 'Y'
			AND a.ATCH_FILE_ID = #{searchAtchFileId}
			<if test="schAuthorCode == 'ROLE_USER'">
			/* 협력사 조건 *//* COOPERATOR_ID로 조건을 만든건 ★정산 파일을 올릴때 권한이 있는 협력사ID 데이터만 올릴수 있음!!★ - 나머지는 오류 처리할꺼임  */
			AND COOPERATOR_ID IN (
				SELECT COOPERATOR_ID FROM RD_COOPERATOR a
				WHERE a.REGISTRATION_SN = #{schIhidNum} AND use_at ='Y'
			)
			</if>
			order by b.WEEK_ID asc, LPAD(b.NO, 4,0) ASC
	</select>

</mapper>